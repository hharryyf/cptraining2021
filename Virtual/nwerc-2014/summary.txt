Contest link: https://codeforces.com/gym/101482

C. Cent Savings
[solved] this is a stupid dp problem. Time complexity O(DN^2)

E. Euclidean TSP
[solved] if we plot the function on geobra, we can observe the function has a single peek/cave, hence
we can use ternary search to solve it.

F. Finding Lines
[solved] When I saw p is more than 1/5, I think we might use randomized algorithm
to solve it, and it works.


H. Hyacinth
[solved] Note that as long as we start from a degree 1 node and color from up to down, we are done.

I. Indoorienteering
[solved] This is the typical case of using meet-in-the-middle. Since 14! is too large but 7! is just ok
we can try meet in the middle trick. we partition the path into 2 groups, (N + 1) / 2 length and N - (N + 1) / 2
length. Note that we must to this for all c(N, (N + 1) / 2) choice of the first group. After that, we manipulate
all permutations of the first group with 1 as the starting node and also the permutation of the second group.
We'll need to check if the first group can link-up with the second group. 

J. Judging Troubles	
[solved] The answer is simply sum(min(occ_1[str], occ_2[str])) for all unique strings in group 1.




